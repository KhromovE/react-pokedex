{"version":3,"sources":["assets/logo.svg","ui/templates/Main/Main.js","ui/templates/Container/Container.js","features/shared/api.js","features/shared/constants.js","features/pokemons/api.js","features/pokemons/molecules/PokemonCard/PokemonCard.js","colors.js","features/pokemons/molecules/Stat/Stat.js","ui/atoms/Logo/Logo.js","features/pokemons/molecules/PokemonCardBack/PokemonCardBack.js","features/pokemons/atoms/Type/Type.js","features/pokemons/molecules/PokemonCardFront/PokemonCardFront.js","lib/utils.js","features/pokemons/organisms/PokemonList/PokemonList.js","ui/molecules/Header/Header.js","ui/molecules/Pagination/Pagination.js","ui/molecules/PageSize/PageSize.js","ui/molecules/Search/Search.jsx","features/pokemons/constants.js","features/pokemons/pages/Dashboard/Dashboard.js","features/pokemons/store.js","stores.js","global-styles.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Body","styled","main","_templateObject","Main","memo","_ref","children","header","react_default","a","createElement","react","Container","div","Container_templateObject","callApi","Object","asyncToGenerator","regenerator_default","mark","_callee","type","path","data","url","response","_args","arguments","wrap","_context","prev","next","length","undefined","URL","search","URLSearchParams","fetch","sent","abrupt","json","stop","this","apply","get","params","getPokemonList","limit","offset","getPokemon","name","_ref2","sprites","types","stats","concat","image","front_default","t0","_x","Card","section","PokemonCard_templateObject","CardInner","_templateObject2","loading","PokemonCard","pokemon","PokemonCardBack","PokemonCardFront","RED","Wrapper","Stat_templateObject","Label","span","Stat_templateObject2","Value","_templateObject3","Stat","Img","img","Logo_templateObject","height","flip","LogoView","_ref3","src","logo","alt","Logo","defaultProps","BackSide","PokemonCardBack_templateObject","LogoWrapper","PokemonCardBack_templateObject2","TYPE_COLORS","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","Type","Type_templateObject","FrontSide","PokemonCardFront_templateObject","Header","PokemonCardFront_templateObject2","SpriteWrapper","PokemonCardFront_templateObject3","DataWrapper","_templateObject4","TypeWrapper","_templateObject5","Name","_templateObject6","StatsWrapper","_templateObject7","string","charAt","toUpperCase","slice","map","key","base_stat","stat","PokemonList_templateObject","PokemonList","_PureComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","value","props","_this$props","list","PokemonList_Wrapper","PureComponent","Header_templateObject","Header_Wrapper","Pagination_templateObject","Pagination","enhance","count","handlePageChange","Pagination_Wrapper","dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","marginPagesDisplayed","pageRangeDisplayed","containerClassName","pageClassName","subContainerClassName","activeClassName","PageSize_templateObject","PageSize_templateObject2","Item","PageSize_templateObject3","selected","PageSizeView","_ref4","items","handleLimitChange","PageSize_Wrapper","PageSize_Label","item","href","onClick","e","preventDefault","PageSize","Input","input","Search_templateObject","Search","_getPrototypeOf2","_this","_len","args","Array","_key","call","state","handleInputChange","target","setState","handleSearchChange","debounce","placeholder","onChange","LIMITS","ActionsWrapper","Dashboard_templateObject","SearchWrapper","Dashboard_templateObject2","Dashboard","fns","reduceRight","prevFn","nextFn","compose","inject","observer","pokemonsStore","Search_Search","PokemonList_PokemonList","pageNumber","fakeDelay","Promise","resolve","setTimeout","PokemonsStore","fill","_","index","_ref5","_response","results","promises","fullDataList","all","slicedToArray","reduce","acc","toConsumableArray","_ref7","_callee2","_ref6","_context2","_ref8","_callee3","_context3","_x2","_ref9","_callee4","_context4","_x3","Math","ceil","decorate","observable","computed","stores","GlobalStyle","createGlobalStyle","global_styles_templateObject","App","index_module","Header_Header","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc4413ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3d794d5b.svg\";","import React, { Fragment, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { Container } from '..'\n\nconst Body = styled.main`\n  background-color: white;\n  padding: 1.8rem;\n\n  @media (max-width: 580px) {\n    padding: 1.8rem 1rem;\n  }\n`\n\nexport const MainView = ({ children, header }) => (\n  <Fragment>\n    {header}\n    <Container>\n      <Body>{children}</Body>\n    </Container>\n  </Fragment>\n)\n\nMainView.propTypes = {\n  children: PropTypes.node.isRequired,\n  header: PropTypes.node.isRequired,\n}\n\nexport const Main = memo(MainView)\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  max-width: 900px;\n  width: 100%;\n  margin: 0 auto;\n`\n","import { GET } from './constants'\n\nconst baseUrl = 'https://pokeapi.co/api/v2/'\n\nconst callApi = async (type = GET, path, data = {}) => {\n  let url = new URL(baseUrl + path)\n\n  if (type === GET) {\n    url.search = new URLSearchParams(data)\n  }\n\n  const response = await fetch(url)\n  return response.json()\n}\n\nexport const get = (path, params) => callApi(GET, path, params)\n","export const GET = 'get'\n","import { get } from '../shared'\n\nexport const getPokemonList = (limit, offset) => get('pokemon', { limit, offset })\nexport const getPokemon = async name => {\n  let data\n  try {\n    const { sprites, types, stats } = await get(`pokemon/${name}`)\n\n    data = {\n      image: sprites.front_default,\n      name,\n      types,\n      stats,\n    }\n  } catch {\n    return null\n  }\n\n  return data\n}\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { PokemonCardBack, PokemonCardFront } from '..'\n\nconst Card = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-right: 1.8rem;\n  margin-bottom: 1.8rem;\n  min-height: 420px;\n  perspective: 1000px;\n\n  @media (max-width: 580px) {\n    width: 100%;\n    margin-right: 0;\n  }\n  @media (max-width: 900px) and (min-width: 581px) {\n    width: calc(50% - 0.9rem);\n\n    &:nth-child(2n) {\n      margin-right: 0;\n    }\n  }\n  @media (min-width: 901px) {\n    width: calc(33% - 1.03rem);\n\n    &:nth-child(3n) {\n      margin-right: 0;\n    }\n  }\n`\n\nconst CardInner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transition: transform 0.6s;\n  transform-style: preserve-3d;\n  transform: ${({ loading }) => (!loading ? 'rotateY(180deg)' : 'rotateY(0deg)')};\n`\n\nexport const PokemonCardView = ({ pokemon, loading }) => (\n  <Card>\n    <CardInner loading={loading}>\n      <PokemonCardBack />\n      <PokemonCardFront pokemon={pokemon} />\n    </CardInner>\n  </Card>\n)\n\nPokemonCardView.propTypes = {\n  pokemon: PropTypes.shape().isRequired,\n  loading: PropTypes.bool.isRequired,\n}\n\nexport const PokemonCard = memo(PokemonCardView)\n","export const LIGHTER_GRAY = '#f8f8f8'\nexport const MEDIUM_GRAY = '#f4f4f4'\nexport const LIGHT_GRAY = '#e9e9e9'\nexport const GRAY = '#b5b5b5'\nexport const DARK_GRAY = '#757575'\nexport const RED = '#ef5350'\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { GRAY, DARK_GRAY } from '../../../../colors'\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n`\n\nconst Label = styled.span`\n  font-size: 12px;\n  color: ${GRAY};\n  margin-bottom: 0.5rem;\n`\n\nconst Value = styled.span`\n  font-size: 15px;\n  color: ${DARK_GRAY};\n  margin-bottom: 0.8rem;\n`\n\nexport const StatView = ({ children, name }) => (\n  <Wrapper>\n    <Label>{name}</Label>\n    <Value>{children}</Value>\n  </Wrapper>\n)\n\nStatView.propTypes = {\n  children: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n}\n\nexport const Stat = memo(StatView)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport logo from '../../../assets/logo.svg'\n\nconst Img = styled.img`\n  height: ${({ height }) => height}px;\n  transform: ${({ flip }) => flip && 'scale(-1, -1)'};\n`\n\nexport const LogoView = ({ height, flip }) => <Img src={logo} height={height} alt=\"pokemon\" flip={flip} />\n\nexport const Logo = memo(LogoView)\n\nLogoView.propTypes = {\n  height: PropTypes.string,\n  flip: PropTypes.bool,\n}\n\nLogoView.defaultProps = {\n  height: '60',\n  flip: false,\n}\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\n\nimport { Logo } from '../../../../ui/atoms'\n\nconst BackSide = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  z-index: 1;\n  background-color: #216091;\n  border: 1px solid #013078;\n  position: absolute;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  border-radius: 4px;\n`\n\nconst LogoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n\n  &:first-child {\n    margin-top: 3rem;\n  }\n\n  &:last-child {\n    margin-bottom: 3rem;\n  }\n`\n\nexport const PokemonCardBackView = () => (\n  <BackSide>\n    <LogoWrapper>\n      <Logo />\n    </LogoWrapper>\n    <LogoWrapper>\n      <Logo flip />\n    </LogoWrapper>\n  </BackSide>\n)\n\nexport const PokemonCardBack = memo(PokemonCardBackView)\n","import styled from 'styled-components'\n\nexport const TYPE_COLORS = {\n  normal: '#a7a971',\n  fighting: '#d1181b',\n  flying: '#ad8cf7',\n  poison: '#ad33a5',\n  ground: '#e6c057',\n  rock: '#bda011',\n  bug: '#a3ba00',\n  ghost: '#75559c',\n  steel: '#b8b8d2',\n  fire: '#ff7900',\n  water: '#5f8ff7',\n  grass: '#58cc35',\n  electric: '#ffd000',\n  psychic: '#ff4587',\n  ice: '#84dad9',\n  dragon: '#7b25ff',\n  dark: '#735745',\n  fairy: '#ffa4ff',\n}\n\nexport const Type = styled.section`\n  display: flex;\n  align-items: center;\n  background-color: ${({ children }) => TYPE_COLORS[children]};\n  color: white;\n  font-size: 14px;\n  border-radius: 15px;\n  padding: 0 12px;\n  margin-left: 5px;\n  height: 21px;\n`\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { LIGHT_GRAY, LIGHTER_GRAY, DARK_GRAY } from '../../../../colors'\nimport { Logo } from '../../../../ui/atoms'\nimport { capitalize } from '../../../../lib/utils'\nimport { Type } from '../../atoms'\nimport { Stat } from '..'\n\n/* eslint-disable camelcase */\n\nconst FrontSide = styled.div`\n  position: absolute;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  z-index: 2;\n  transform: rotateY(180deg);\n  border: 1px solid ${LIGHT_GRAY};\n  border-radius: 4px;\n  background-color: white;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n`\n\nconst SpriteWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 120px;\n  background-color: ${LIGHTER_GRAY};\n`\n\nconst DataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 1rem;\n`\n\nconst TypeWrapper = styled.div`\n  display: flex;\n`\n\nconst Name = styled.span`\n  color: ${DARK_GRAY};\n  font-size: 18px;\n`\n\nconst StatsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 1rem;\n`\n\nexport const PokemonCardFrontView = ({ pokemon }) => (\n  <FrontSide>\n    <Header>\n      <Logo height=\"25\" />\n    </Header>\n    <SpriteWrapper>{pokemon.image && <img src={pokemon.image} alt=\"\" />}</SpriteWrapper>\n    <DataWrapper>\n      <Name>{capitalize(pokemon.name)}</Name>\n      <TypeWrapper>\n        {pokemon.types && pokemon.types.map(({ type }) => <Type key={type.name}>{type.name}</Type>)}\n      </TypeWrapper>\n    </DataWrapper>\n    <StatsWrapper>\n      {pokemon.stats &&\n        pokemon.stats.map(({ base_stat, stat }) => (\n          <Stat key={stat.name} name={stat.name}>\n            {base_stat}\n          </Stat>\n        ))}\n    </StatsWrapper>\n  </FrontSide>\n)\n\nPokemonCardFrontView.propTypes = {\n  pokemon: PropTypes.shape().isRequired,\n}\n\nexport const PokemonCardFront = memo(PokemonCardFrontView)\n","export const compose = (...fns) =>\n  fns.reduceRight((prevFn, nextFn) => (...args) => nextFn(prevFn(...args)), value => value)\n\nexport const arrayToHashMap = (arr, key) => arr.reduce((acc, value, index) => ({ ...acc, [value[key]]: value }), {})\n\nexport const capitalize = string => string.charAt(0).toUpperCase() + string.slice(1)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { PokemonCard } from '../../molecules'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`\n\nexport class PokemonList extends PureComponent {\n  static propTypes = {\n    getPokemonList: PropTypes.func.isRequired,\n    list: PropTypes.arrayOf(PropTypes.object).isRequired,\n    loading: PropTypes.bool.isRequired,\n  }\n\n  componentDidMount() {\n    this.props.getPokemonList()\n  }\n\n  render() {\n    const { list, loading } = this.props\n\n    return (\n      <Wrapper>\n        {list.map(pokemon => (\n          <PokemonCard pokemon={pokemon} key={pokemon.name} loading={loading} />\n        ))}\n        {list.length === 0 && 'Nothing found'}\n      </Wrapper>\n    )\n  }\n}\n","import React, { memo } from 'react'\nimport styled from 'styled-components'\n\nimport { Container } from '../../templates'\nimport { Logo } from '../../atoms'\n\nexport const Wrapper = styled.header`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  height: 70px;\n  background-color: #ef5350;\n\n  @media (max-width: 580px) {\n    padding-left: 1rem;\n  }\n`\n\nexport const HeaderView = () => (\n  <Wrapper>\n    <Container>\n      <Logo />\n    </Container>\n  </Wrapper>\n)\n\nexport const Header = memo(HeaderView)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactPaginate from 'react-paginate'\nimport styled from 'styled-components'\n\nimport { RED, MEDIUM_GRAY, DARK_GRAY } from '../../../colors'\n\nconst Wrapper = styled.div`\n  & .pagination {\n    list-style: none;\n    padding-left: 0;\n    display: flex;\n\n    & .item,\n    & .next,\n    & .previous {\n      font-size: 14px;\n      text-decoration: none;\n      text-transform: uppercase;\n      margin: 0 3px;\n      height: 38px;\n      border-radius: 38px;\n      line-height: 38px;\n      padding: 0;\n      color: ${DARK_GRAY};\n      text-align: center;\n      cursor: pointer;\n      transition: background-color 0.3s ease, color 0.3s ease;\n      min-width: 38px;\n\n      & > a {\n        display: block;\n\n        &:focus {\n          outline: 0;\n        }\n      }\n    }\n\n    & .page,\n    & .next,\n    & .previous {\n      &:hover {\n        background-color: ${MEDIUM_GRAY};\n      }\n    }\n\n    & .page {\n      &.active {\n        background-color: ${RED};\n        color: #fff;\n      }\n    }\n  }\n`\n\nconst enhance = memo\n\nexport const PaginationView = ({ count, handlePageChange }) => (\n  <Wrapper>\n    <ReactPaginate\n      previousLabel={'<'}\n      nextLabel={'>'}\n      breakLabel={'...'}\n      breakClassName={'break-me item'}\n      pageCount={count}\n      onPageChange={handlePageChange}\n      marginPagesDisplayed={1}\n      pageRangeDisplayed={3}\n      containerClassName={'pagination'}\n      pageClassName={'item page'}\n      subContainerClassName={'pages pagination'}\n      activeClassName={'active'}\n    />\n  </Wrapper>\n)\n\nPaginationView.propTypes = {\n  count: PropTypes.number.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n}\n\nexport const Pagination = enhance(PaginationView)\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport { DARK_GRAY, MEDIUM_GRAY, RED } from '../../../colors'\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  text-decoration: none;\n  text-transform: uppercase;\n  padding: 0;\n  color: ${DARK_GRAY};\n`\n\nconst Label = styled.span`\n  margin-right: 12px;\n`\n\nconst Item = styled.a`\n  display: block;\n  font-size: 14px;\n  text-decoration: none;\n  text-transform: uppercase;\n  margin: 0 3px;\n  height: 38px;\n  width: 38px;\n  border-radius: 38px;\n  line-height: 38px;\n  padding: 0;\n  color: ${({ selected }) => (selected ? 'white' : DARK_GRAY)};\n  text-align: center;\n  cursor: pointer;\n  transition: background-color 0.3s ease, color 0.3s ease;\n  background-color: ${({ selected }) => (selected ? RED : 'none')}\n\n  &:hover {\n    background-color: ${({ selected }) => (selected ? RED : MEDIUM_GRAY)};\n  }\n`\n\nexport const PageSizeView = ({ items, handleLimitChange, limit }) => (\n  <Wrapper>\n    <Label>Page size:</Label>\n    {items.map(item => (\n      <Item\n        href=\"#\"\n        key={item}\n        selected={limit === item}\n        onClick={e => {\n          e.preventDefault()\n\n          if (limit !== item) {\n            handleLimitChange(item)\n          }\n        }}\n      >\n        {item}\n      </Item>\n    ))}\n  </Wrapper>\n)\n\nPageSizeView.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.number),\n  handleLimitChange: PropTypes.func.isRequired,\n  limit: PropTypes.number.isRequired,\n}\n\nPageSizeView.defaultProps = {\n  items: [],\n}\n\nexport const PageSize = memo(PageSizeView)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport debounce from 'lodash.debounce'\n\nimport { LIGHT_GRAY } from '../../../colors'\n\nconst Input = styled.input`\n  font-size: 16px;\n  padding: 0.5em;\n  outline: none;\n  border: 1px solid ${LIGHT_GRAY};\n  border-radius: 4px;\n  max-width: 400px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nexport class Search extends PureComponent {\n  static propTypes = {\n    placeholder: PropTypes.string.isRequired,\n    handleSearchChange: PropTypes.func.isRequired,\n  }\n\n  state = {\n    value: '',\n  }\n\n  handleInputChange = e => {\n    const value = e.target.value\n\n    this.setState({ value }, () => {\n      this.handleSearchChange(value)\n    })\n  }\n\n  handleSearchChange = debounce(this.props.handleSearchChange, 400)\n\n  render() {\n    const { value } = this.state\n    const { placeholder } = this.props\n\n    return <Input value={value} placeholder={placeholder} onChange={this.handleInputChange} />\n  }\n}\n","export const LIMITS = [12, 21, 51]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { observer, inject } from 'mobx-react'\nimport styled from 'styled-components'\n\nimport { compose } from '../../../../lib/utils'\nimport { PokemonList } from '../../organisms'\nimport { Pagination, PageSize, Search } from '../../../../ui/molecules'\nimport { LIMITS } from '../../constants'\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 0.5rem;\n\n  @media (max-width: 640px) {\n    justify-content: center;\n  }\n`\n\nconst SearchWrapper = styled.div`\n  margin-bottom: 1.5rem;\n`\n\nconst enhance = compose(\n  inject('pokemonsStore'),\n  observer,\n)\n\nconst DashboardView = ({ pokemonsStore }) => (\n  <div>\n    <SearchWrapper>\n      <Search placeholder=\"Search\" handleSearchChange={pokemonsStore.handleSearchChange} value={pokemonsStore.name} />\n    </SearchWrapper>\n    <PokemonList\n      getPokemonList={pokemonsStore.getPokemonList}\n      list={pokemonsStore.list}\n      loading={pokemonsStore.loading}\n    />\n    <ActionsWrapper>\n      <Pagination count={pokemonsStore.pageNumber} handlePageChange={pokemonsStore.handlePageChange} />\n      <PageSize items={LIMITS} handleLimitChange={pokemonsStore.handleLimitChange} limit={pokemonsStore.limit} />\n    </ActionsWrapper>\n  </div>\n)\n\nDashboardView.propTypes = {\n  pokemonsStore: PropTypes.shape({\n    getPokemonList: PropTypes.func.isRequired,\n    list: PropTypes.arrayOf(PropTypes.object).isRequired,\n    pageNumber: PropTypes.number.isRequired,\n    handlePageChange: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    handleLimitChange: PropTypes.func.isRequired,\n    handleSearchChange: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    limit: PropTypes.number.isRequired,\n  }),\n}\n\nexport const Dashboard = enhance(DashboardView)\n","import { decorate, observable, computed } from 'mobx'\n\nimport { getPokemonList, getPokemon } from './api'\nimport { LIMITS } from './constants'\n\nconst fakeDelay = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve()\n    }, 600)\n  })\n}\n\nexport class PokemonsStore {\n  list = Array(LIMITS[1])\n    .fill(1)\n    .map((_, index) => ({ name: `name-${index}` }))\n  offset = 0\n  limit = LIMITS[1]\n  count = 0\n  loading = false\n  name = ''\n\n  getPokemonList = async () => {\n    this.loading = true\n\n    if (this.name.length) {\n      const [response] = await Promise.all([getPokemon(this.name), fakeDelay()])\n\n      if (response) {\n        this.list = [response]\n        this.count = 1\n      } else {\n        this.list = []\n        this.count = 0\n      }\n    } else {\n      const [response] = await Promise.all([getPokemonList(this.limit, this.offset), fakeDelay()])\n      const { results, count } = response\n\n      this.list = results\n      this.count = count\n\n      const promises = results.reduce((acc, data) => [...acc, getPokemon(data.name)], [])\n      const fullDataList = await Promise.all(promises)\n\n      this.list = fullDataList\n    }\n\n    this.loading = false\n  }\n\n  handlePageChange = async ({ selected }) => {\n    this.offset = selected * this.limit\n\n    await this.getPokemonList()\n  }\n\n  handleLimitChange = async limit => {\n    this.limit = limit\n    this.offset = 0\n\n    await this.getPokemonList()\n  }\n\n  handleSearchChange = async name => {\n    this.name = name\n\n    await this.getPokemonList()\n  }\n\n  get pageNumber() {\n    return Math.ceil(this.count / this.limit)\n  }\n}\n\ndecorate(PokemonsStore, {\n  list: observable,\n  offset: observable,\n  limit: observable,\n  count: observable,\n  loading: observable,\n  pageNumber: computed,\n})\n","import { PokemonsStore } from './features/pokemons'\n\nconst pokemonsStore = new PokemonsStore()\n\nexport const stores = {\n  pokemonsStore,\n}\n","import { createGlobalStyle } from 'styled-components'\nimport { LIGHT_GRAY } from './colors'\n\nexport const GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tfont-family: 'Gotham Book', Arial, sans-serif;\n    margin: 0;\n    background-color: ${LIGHT_GRAY};\n\t}\n`\n","import React, { Fragment } from 'react'\nimport { Provider } from 'mobx-react'\n\nimport { Main } from './ui/templates'\nimport { Dashboard } from './features/pokemons'\nimport { Header } from './ui/molecules'\nimport { stores } from './stores'\nimport { GlobalStyle } from './global-styles'\n\nexport const App = () => (\n  <Provider {...stores}>\n    <Fragment>\n      <Main header={<Header />}>\n        <Dashboard />\n      </Main>\n      <GlobalStyle />\n    </Fragment>\n  </Provider>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}